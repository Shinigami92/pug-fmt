// Copied from JSON-LD playground
script(
  type='application/ld+json'
).
  {
    "@context": {
      "name": "http://schema.org/name",
      "description": "http://schema.org/description",
      "image": {
        "@id": "http://schema.org/image",
        "@type": "@id"
      },
      "geo": "http://schema.org/geo",
      "latitude": {
        "@id": "http://schema.org/latitude",
        "@type": "xsd:float"
      },
      "longitude": {
        "@id": "http://schema.org/longitude",
        "@type": "xsd:float"
      },
      "xsd": "http://www.w3.org/2001/XMLSchema#"
    },
    "name": "The Empire State Building",
    "description": "The Empire State Building is a 102-story landmark in New York City.",
    "image": "http://www.civil.usherbrooke.ca/cours/gci215a/empire-state-building.jpg",
    "geo": {
      "latitude": "40.75",
      "longitude": "73.98"
    }
  }

// Copied from https://YAML.org
script(
  type='application/x-not-a-real+yaml'
).
  %YAML 1.2
  ---
  YAML: YAML Ain't Markup Language

  What It Is: YAML is a human friendly data serialization
    standard for all programming languages.

  YAML Resources:
    YAML 1.2 (3rd Edition): http://yaml.org/spec/1.2/spec.html
    YAML 1.1 (2nd Edition): http://yaml.org/spec/1.1/
    YAML 1.0 (1st Edition): http://yaml.org/spec/1.0/
    YAML Issues Page:       https://github.com/yaml/yaml/issues
    YAML Mailing List:      yaml-core@lists.sourceforge.net
    YAML IRC Channel:       "#yaml on irc.libera.chat"
    YAML Reference Parser:  http://ben-kiki.org/ypaste/
    YAML Spec:              https://github.com/yaml/yaml-spec
    YAML Test Suite:        https://github.com/yaml/yaml-test-suite
    YAML Test Matrix:       https://matrix.yaml.io/
    YAML Docker Runtimes:   https://github.com/yaml/yaml-runtimes
    YAML Cookbook (Ruby):   YAML_for_ruby.html 

  Projects:
    C/C++:
    - libfyaml           # "C" YAML 1.2 processor                                            | YTS
    - libyaml            # "C" Fast YAML 1.1                                                 | YTS
    - libcyaml           # YAML de/serialization of C data structures (using libyaml)
    - yaml-cpp           # C++ YAML 1.2 implementation
    Crystal:
    - YAML               # YAML 1.1 from the standard library
    C#/.NET:
    - YamlDotNet         # YAML 1.1/(1.2) library with serialization support                 | YTS
    - yaml-net           # YAML 1.1 library
    D:
    - D-YAML             # YAML 1.1 de/serialization library with official community support | YTS
    Dart:
    - yaml               # YAML package for Dart
    Delphi:
    - Neslib.Yaml        # YAML 1.1 Delphi binding to libyaml                                | YTS
    Golang:
    - Go-yaml            # YAML support for the Go language.
    - Go-gypsy           # Simplified YAML parser written in Go.
    - goccy/go-yaml      # YAML 1.2 implementation in pure Go.
    Haskell:
    - HsYAML             # YAML 1.2 implementation in pure Haskell                           | YTS
    - YamlReference      # Haskell 1.2 reference parser
    - yaml               # YAML 1.1 parser/renderer for Haskell (based on libyaml)
    Java:
    - SnakeYAML          # Java 5 / YAML 1.1
    - YamlBeans          # To/from JavaBeans. YAML 1.0/1.1
    - eo-yaml            # YAML 1.2 for Java 8. Also packaged as a Module (Java 9+).
    JavaScript:
    - js-yaml            # Native PyYAML port to JavaScript. Demo
    - yaml               # JavaScript parser and stringifier (YAML 1.2, 1.1)                 | YTS
    Nim:
    - NimYAML            # YAML 1.2 implementation in pure Nim                               | YTS
    OCaml:
    - ocaml-syck         # YAML 1.0 via syck bindings
    Perl Modules:
    - YAML               # Pure Perl YAML 1.0 Module
    - YAML::XS           # Binding to libyaml
    - YAML::Syck         # Binding to libsyck
    - YAML::Tiny         # A small YAML subset module
    - YAML::PP           # A YAML 1.2/1.1 processor                                          | YTS
    PHP:
    - The Yaml Component # Symfony Yaml Component - Loads and dumps YAML files (YAML 1.2)  
    - php-yaml           # libyaml bindings (YAML 1.1)
    - syck               # syck bindings (YAML 1.0)
    - spyc               # yaml loader/dumper (YAML 1.?)
    Python:
    - PyYAML             # YAML 1.1, pure python and libyaml binding
    - ruamel.yaml        # YAML 1.2, update of PyYAML with round-tripping of comments
    - PySyck             # YAML 1.0, syck binding
    - strictyaml         # Restricted YAML subset
    R:
    - R YAML             # libyaml wrapper  
    Ruby:
    - psych              # libyaml wrapper (in Ruby core for 1.9.2)
    - RbYaml             # YAML 1.1 (PyYAML Port)
    - yaml4r             # YAML 1.0, standard library syck binding
    Rust:
    - yaml-rust          # YAML 1.2 implementation in pure Rust
    - serde-yaml         # YAML de/serialization of structs
    Others:
    - yamlvim (src)      # YAML dumper/emitter in pure vimscript

script(
  type='text/typescript'
).
  const myVariable: string = 'Hello World' as any as string

  function myFunc<myGeneric>({ myProp = 42 }: { myProp: number }): myGeneric {
    console.log(myVariable)
    return true
  }

  myFunc({ myProp: 100 })

script(
  type='text/markdown'
).
  # h1
  ## h2
  ### h3
  #### h4
  ##### h5
  ###### h6

  Hello World.

  * Bullet point 1
  * Bullet point 2

  1. List item
  2. Another list item
  